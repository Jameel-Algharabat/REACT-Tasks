{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\ContractManagementSystem-master\\\\src\\\\components\\\\rateChart.jsx\";\nimport React, { Component } from \"react\";\nimport BarChart from \"./common/charts/barChart\";\nimport LineChart from \"./common/charts/lineChart\";\nimport { getCurrentRates, getHistoryRates } from \"../services/rateService\";\n\nvar RateChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RateChart, _Component);\n\n  function RateChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RateChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RateChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentRates: {},\n      currentChartData: {},\n      historyRates: {},\n      historyChartData: {}\n    };\n\n    _this.componentDidMount = function () {\n      _this.getRates();\n    };\n\n    _this.getRates =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, currentRates, _ref3, historyRates;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getCurrentRates();\n\n            case 2:\n              _ref2 = _context.sent;\n              currentRates = _ref2.data;\n\n              _this.setState({\n                currentRates: currentRates\n              });\n\n              _this.convertCurrentRatesToChartdata();\n\n              _context.next = 8;\n              return getHistoryRates();\n\n            case 8:\n              _ref3 = _context.sent;\n              historyRates = _ref3.data;\n\n              _this.setState({\n                historyRates: historyRates\n              });\n\n              _this.convertHistoryRatesToChartdata();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.convertCurrentRatesToChartdata = function () {\n      var currentChartData = {\n        labels: [],\n        datasets: [{\n          label: \"ETH to USD/CHF/EUR Rate\",\n          data: [],\n          backgrouldColor: \"\"\n        }]\n      };\n      Object.keys(_this.state.currentRates).map(function (key) {\n        currentChartData.labels.push(key);\n        currentChartData.datasets[0].data.push(_this.state.currentRates[key]);\n      });\n\n      _this.setState({\n        currentChartData: currentChartData\n      });\n    };\n\n    _this.convertHistoryRatesToChartdata = function () {\n      var historyChartData = {\n        labels: [],\n        datasets: [{\n          label: \"Last 30 Days ETH/USD Exchange Rates\",\n          data: [],\n          backgrouldColor: \"\"\n        }]\n      };\n\n      for (var i = 0; i < 31; i++) {\n        historyChartData.labels.push(i);\n        historyChartData.datasets[0].data.push(_this.state.historyRates.Data[i].close);\n      }\n\n      _this.setState({\n        historyChartData: historyChartData\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        chartData: _this.state.historyChartData,\n        options: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        chartData: _this.state.currentChartData,\n        options: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  return RateChart;\n}(Component);\n\nexport default RateChart;","map":{"version":3,"sources":["C:\\React\\ContractManagementSystem-master\\src\\components\\rateChart.jsx"],"names":["React","Component","BarChart","LineChart","getCurrentRates","getHistoryRates","RateChart","state","currentRates","currentChartData","historyRates","historyChartData","componentDidMount","getRates","data","setState","convertCurrentRatesToChartdata","convertHistoryRatesToChartdata","labels","datasets","label","backgrouldColor","Object","keys","map","key","push","i","Data","close","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BarChart from \"./common/charts/barChart\";\nimport LineChart from \"./common/charts/lineChart\";\nimport { getCurrentRates, getHistoryRates } from \"../services/rateService\";\n\nclass RateChart extends Component {\n  state = {\n    currentRates: {},\n    currentChartData: {},\n    historyRates: {},\n    historyChartData: {}\n  };\n\n  componentDidMount = () => {\n    this.getRates();\n  };\n\n  getRates = async () => {\n    const { data: currentRates } = await getCurrentRates();\n    this.setState({ currentRates });\n    this.convertCurrentRatesToChartdata();\n\n    const { data: historyRates } = await getHistoryRates();\n    this.setState({ historyRates });\n    this.convertHistoryRatesToChartdata();\n  };\n\n  convertCurrentRatesToChartdata = () => {\n    let currentChartData = {\n      labels: [],\n      datasets: [\n        {\n          label: \"ETH to USD/CHF/EUR Rate\",\n          data: [],\n          backgrouldColor: \"\"\n        }\n      ]\n    };\n\n    Object.keys(this.state.currentRates).map(key => {\n      currentChartData.labels.push(key);\n      currentChartData.datasets[0].data.push(this.state.currentRates[key]);\n    });\n\n    this.setState({ currentChartData });\n  };\n\n  convertHistoryRatesToChartdata = () => {\n    let historyChartData = {\n      labels: [],\n      datasets: [\n        {\n          label: \"Last 30 Days ETH/USD Exchange Rates\",\n          data: [],\n          backgrouldColor: \"\"\n        }\n      ]\n    };\n\n    for (let i = 0; i < 31; i++) {\n      historyChartData.labels.push(i);\n      historyChartData.datasets[0].data.push(\n        this.state.historyRates.Data[i].close\n      );\n    }\n\n    this.setState({ historyChartData });\n  };\n\n  render = () => {\n    return (\n      <div className=\"chart\">\n        <div className=\"col-md-10\">\n          <LineChart chartData={this.state.historyChartData} options={{}} />\n        </div>\n        <div className=\"col-md-10\">\n          <BarChart chartData={this.state.currentChartData} options={{}} />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default RateChart;\n"]},"metadata":{},"sourceType":"module"}