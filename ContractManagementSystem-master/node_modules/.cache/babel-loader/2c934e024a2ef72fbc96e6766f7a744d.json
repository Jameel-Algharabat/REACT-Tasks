{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\ContractManagementSystem-master\\\\src\\\\components\\\\contracts.jsx\";\nimport React, { Component } from \"react\";\nimport { getContracts, deleteContract, saveContract } from \"../services/contractService\";\nimport Pagination from \"./common/pagination\";\nimport paginate from \"../utilities/paginate\";\nimport ContractsTable from \"./contractsTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/searchBox\";\n\nvar Contracts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contracts, _Component);\n\n  function Contracts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Contracts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contracts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      contracts: [],\n      pageSize: 5,\n      currentPage: 1,\n      searchQuery: \"\",\n      sortColumn: {\n        path: \"username\",\n        order: \"asc\"\n      }\n    };\n\n    _this.handleDelete =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(contract) {\n        var originalContracts, contracts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                originalContracts = _this.state.contracts;\n                contracts = originalContracts.filter(function (c) {\n                  return c.id !== contract.id;\n                });\n\n                _this.setState({\n                  contracts: contracts\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return deleteContract(contract.id);\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n\n                if (_context.t0.response) {\n                  _this.setState({\n                    contracts: originalContracts\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleMark = function (contract) {\n      var contracts = _this.state.contracts.filter(function (c) {\n        if (c.id === contract.id) {\n          c.marked = !c.marked;\n          saveContract(c);\n        }\n\n        return c;\n      });\n\n      _this.setState({\n        contracts: contracts\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState({\n        searchQuery: query,\n        currentPage: 1\n      });\n    };\n\n    _this.getPagedData = function () {\n      var _this$state = _this.state,\n          size = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          allContracts = _this$state.contracts,\n          searchQuery = _this$state.searchQuery,\n          sortColumn = _this$state.sortColumn;\n      var filtered = allContracts;\n      if (searchQuery) filtered = allContracts.filter(function (m) {\n        return m.user.name && m.user.surname && (m.user.surname.toLowerCase().includes(searchQuery.toLowerCase()) || m.user.name.toLowerCase().includes(searchQuery.toLowerCase()));\n      });\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var contracts = paginate(sorted, currentPage, size);\n      return {\n        totalCount: filtered.length,\n        data: contracts\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Contracts, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _ref2, contracts;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getContracts();\n\n              case 2:\n                _ref2 = _context2.sent;\n                contracts = _ref2.data;\n                this.setState({\n                  contracts: contracts\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          size = _this$state2.pageSize,\n          currentPage = _this$state2.currentPage,\n          searchQuery = _this$state2.searchQuery,\n          sortColumn = _this$state2.sortColumn;\n\n      var _this$getPagedData = this.getPagedData(),\n          totalCount = _this$getPagedData.totalCount,\n          data = _this$getPagedData.data;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/contracts/new\",\n        className: \"btn btn-primary\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"New Contract\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"There are \", totalCount, \" contracts in system\"), React.createElement(SearchBox, {\n        value: searchQuery,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(ContractsTable, {\n        contracts: data,\n        sortColumn: sortColumn,\n        onMark: this.handleMark,\n        onDelete: this.handleDelete,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: totalCount,\n        size: size,\n        currentPage: currentPage,\n        onPageChange: function onPageChange(page) {\n          return _this2.handlePageChange(page);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Contracts;\n}(Component);\n\nexport { Contracts as default };","map":{"version":3,"sources":["C:\\React\\ContractManagementSystem-master\\src\\components\\contracts.jsx"],"names":["React","Component","getContracts","deleteContract","saveContract","Pagination","paginate","ContractsTable","_","Link","SearchBox","Contracts","state","contracts","pageSize","currentPage","searchQuery","sortColumn","path","order","handleDelete","contract","originalContracts","filter","c","id","setState","response","handleMark","marked","handlePageChange","page","handleSort","handleSearch","query","getPagedData","size","allContracts","filtered","m","user","name","surname","toLowerCase","includes","sorted","orderBy","totalCount","length","data","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  getContracts,\n  deleteContract,\n  saveContract\n} from \"../services/contractService\";\nimport Pagination from \"./common/pagination\";\nimport paginate from \"../utilities/paginate\";\nimport ContractsTable from \"./contractsTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/searchBox\";\n\nexport default class Contracts extends Component {\n  state = {\n    contracts: [],\n    pageSize: 5,\n    currentPage: 1,\n    searchQuery: \"\",\n    sortColumn: { path: \"username\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data: contracts } = await getContracts();\n    this.setState({ contracts });\n  }\n\n  handleDelete = async contract => {\n    const originalContracts = this.state.contracts;\n    const contracts = originalContracts.filter(c => c.id !== contract.id);\n    this.setState({ contracts });\n    try {\n      await deleteContract(contract.id);\n    } catch (ex) {\n      if (ex.response) {\n        this.setState({ contracts: originalContracts });\n      }\n    }\n  };\n\n  handleMark = contract => {\n    const contracts = this.state.contracts.filter(c => {\n      if (c.id === contract.id) {\n        c.marked = !c.marked;\n        saveContract(c);\n      }\n      return c;\n    });\n    this.setState({ contracts });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize: size,\n      currentPage,\n      contracts: allContracts,\n      searchQuery,\n      sortColumn\n    } = this.state;\n\n    let filtered = allContracts;\n    if (searchQuery)\n      filtered = allContracts.filter(\n        m =>\n          m.user.name &&\n          m.user.surname &&\n          (m.user.surname.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            m.user.name.toLowerCase().includes(searchQuery.toLowerCase()))\n      );\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const contracts = paginate(sorted, currentPage, size);\n    return { totalCount: filtered.length, data: contracts };\n  };\n\n  render() {\n    const { pageSize: size, currentPage, searchQuery, sortColumn } = this.state;\n    const { totalCount, data } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <Link\n            to=\"/contracts/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Contract\n          </Link>\n          <p>There are {totalCount} contracts in system</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <ContractsTable\n            contracts={data}\n            sortColumn={sortColumn}\n            onMark={this.handleMark}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            size={size}\n            currentPage={currentPage}\n            onPageChange={page => this.handlePageChange(page)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}