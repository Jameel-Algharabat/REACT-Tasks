{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\ContractManagementSystem-master\\\\src\\\\components\\\\contractForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getContract, saveContract } from \"../services/contractService\";\nimport { getCurrencies } from \"../services/fakeCurrencyService\";\n\nvar ContractForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(ContractForm, _Form);\n\n  function ContractForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContractForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContractForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        name: \"\",\n        surname: \"\",\n        amountInUsd: \"\",\n        currency: \"\",\n        date: \"\"\n      },\n      currencies: [],\n      errors: {}\n    };\n    _this.schema = {\n      id: Joi.string(),\n      name: Joi.string().required().min(3).max(15).label(\"Name\"),\n      surname: Joi.string().required().min(2).max(15).label(\"Surname\"),\n      amountInUsd: Joi.number().required().min(0).label(\"Amount in USD\"),\n      currency: Joi.string().required().min(3).max(3).label(\"Currency\"),\n      date: Joi.string().required().min(10).max(10).label(\"Date\")\n    };\n    _this.doSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return saveContract(_this.state.data);\n\n            case 2:\n              _this.props.history.push(\"/contracts\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(ContractForm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var currencies, contractId, _ref2, contract;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                currencies = getCurrencies();\n                this.setState({\n                  currencies: currencies\n                });\n                contractId = this.props.match.params.id;\n\n                if (!(contractId === \"new\")) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                _context2.next = 7;\n                return getContract(contractId);\n\n              case 7:\n                _ref2 = _context2.sent;\n                contract = _ref2.data;\n                this.setState({\n                  data: this.mapToViewModel(contract)\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"mapToViewModel\",\n    value: function mapToViewModel(contract) {\n      return {\n        id: contract.id,\n        name: contract.user.name,\n        surname: contract.user.surname,\n        amountInUsd: contract.amountInUsd,\n        currency: contract.currency,\n        date: contract.date\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Contract\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderInput(\"name\", \"Name\"), this.renderInput(\"surname\", \"Surname\"), this.renderInput(\"amountInUsd\", \"Amount In USD\", \"number\"), this.renderSelect(\"currency\", \"Currency\", this.state.currencies), this.renderInput(\"date\", \"Date\", \"date\"), this.renderButton(\"Save\")));\n    }\n  }]);\n\n  return ContractForm;\n}(Form);\n\nexport default ContractForm;","map":{"version":3,"sources":["C:\\React\\ContractManagementSystem-master\\src\\components\\contractForm.jsx"],"names":["React","Joi","Form","getContract","saveContract","getCurrencies","ContractForm","state","data","name","surname","amountInUsd","currency","date","currencies","errors","schema","id","string","required","min","max","label","number","doSubmit","props","history","push","setState","contractId","match","params","contract","mapToViewModel","user","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getContract, saveContract } from \"../services/contractService\";\nimport { getCurrencies } from \"../services/fakeCurrencyService\";\n\nclass ContractForm extends Form {\n  state = {\n    data: {\n      name: \"\",\n      surname: \"\",\n      amountInUsd: \"\",\n      currency: \"\",\n      date: \"\"\n    },\n    currencies: [],\n    errors: {}\n  };\n\n  schema = {\n    id: Joi.string(),\n    name: Joi.string()\n      .required()\n      .min(3)\n      .max(15)\n      .label(\"Name\"),\n    surname: Joi.string()\n      .required()\n      .min(2)\n      .max(15)\n      .label(\"Surname\"),\n    amountInUsd: Joi.number()\n      .required()\n      .min(0)\n      .label(\"Amount in USD\"),\n    currency: Joi.string()\n      .required()\n      .min(3)\n      .max(3)\n      .label(\"Currency\"),\n    date: Joi.string()\n      .required()\n      .min(10)\n      .max(10)\n      .label(\"Date\")\n  };\n\n  async componentDidMount() {\n    const currencies = getCurrencies();\n    this.setState({ currencies });\n    \n    const contractId = this.props.match.params.id;\n    if (contractId === \"new\") return;\n\n    const { data: contract } = await getContract(contractId);\n\n    this.setState({ data: this.mapToViewModel(contract) });\n  }\n\n  mapToViewModel(contract) {\n    return {\n      id: contract.id,\n      name: contract.user.name,\n      surname: contract.user.surname,\n      amountInUsd: contract.amountInUsd,\n      currency: contract.currency,\n      date: contract.date\n    };\n  }\n\n  doSubmit = async () => {\n    await saveContract(this.state.data);\n    this.props.history.push(\"/contracts\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Contract</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderInput(\"surname\", \"Surname\")}\n          {this.renderInput(\"amountInUsd\", \"Amount In USD\", \"number\")}\n          {this.renderSelect(\"currency\", \"Currency\", this.state.currencies)}\n          {this.renderInput(\"date\", \"Date\", \"date\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContractForm;\n"]},"metadata":{},"sourceType":"module"}