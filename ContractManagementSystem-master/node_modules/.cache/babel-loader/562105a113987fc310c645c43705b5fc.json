{"ast":null,"code":"import _objectSpread from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\ContractManagementSystem-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\ContractManagementSystem-master\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.validate = function () {\n      var result = Joi.validate(_this.state.data, _this.schema, {\n        abortEarly: false\n      });\n      if (!result.error) return null;\n      var errors = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = result.error.details[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          errors[item.path[0]] = item.message;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return errors;\n    };\n\n    _this.validateProperty = function (_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n\n      var obj = _defineProperty({}, name, value);\n\n      var schema = _defineProperty({}, name, _this.schema[name]);\n\n      var _Joi$validate = Joi.validate(obj, schema),\n          error = _Joi$validate.error;\n\n      return error ? error.details[0].message : null;\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var errors = _this.validate();\n\n      _this.setState({\n        errors: errors || {}\n      });\n\n      if (errors) return;\n\n      _this.doSubmit();\n    };\n\n    _this.handleChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      var errors = _objectSpread({}, _this.state.errors);\n\n      var errorMessage = _this.validateProperty(input);\n\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n\n      var data = _objectSpread({}, _this.state.data);\n\n      data[input.name] = input.value;\n\n      _this.setState({\n        data: data,\n        errors: errors\n      });\n    };\n\n    _this.state = {\n      data: {},\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"renderButton\",\n    value: function renderButton(label) {\n      return React.createElement(\"button\", {\n        disabled: this.validate(),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, label);\n    }\n  }, {\n    key: \"renderSelect\",\n    value: function renderSelect(name, label, options) {\n      var data = this.state.data;\n      return React.createElement(Select, {\n        name: name,\n        value: data[name],\n        label: label,\n        options: options,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput(name, label) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"text\";\n      var _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n      return React.createElement(Input, {\n        type: type,\n        name: name,\n        label: label,\n        value: data[name],\n        onChange: this.handleChange,\n        error: errors[name],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["C:\\React\\ContractManagementSystem-master\\src\\components\\common\\form.jsx"],"names":["React","Component","Joi","Input","Select","Form","validate","result","state","data","schema","abortEarly","error","errors","details","item","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","label","options","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,I;;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,YAAM;AACf,UAAMC,MAAM,GAAGL,GAAG,CAACI,QAAJ,CAAa,MAAKE,KAAL,CAAWC,IAAxB,EAA8B,MAAKC,MAAnC,EAA2C;AACxDC,QAAAA,UAAU,EAAE;AAD4C,OAA3C,CAAf;AAGA,UAAI,CAACJ,MAAM,CAACK,KAAZ,EAAmB,OAAO,IAAP;AAEnB,UAAMC,MAAM,GAAG,EAAf;AANe;AAAA;AAAA;;AAAA;AAOf,6BAAiBN,MAAM,CAACK,KAAP,CAAaE,OAA9B,8HAAuC;AAAA,cAA9BC,IAA8B;AACrCF,UAAAA,MAAM,CAACE,IAAI,CAACC,IAAL,CAAU,CAAV,CAAD,CAAN,GAAuBD,IAAI,CAACE,OAA5B;AACD;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUf,aAAOJ,MAAP;AACD,K;;UAEDK,gB,GAAmB,gBAAqB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AACtC,UAAMC,GAAG,uBAAMF,IAAN,EAAaC,KAAb,CAAT;;AACA,UAAMV,MAAM,uBAAMS,IAAN,EAAa,MAAKT,MAAL,CAAYS,IAAZ,CAAb,CAAZ;;AAFsC,0BAGpBjB,GAAG,CAACI,QAAJ,CAAae,GAAb,EAAkBX,MAAlB,CAHoB;AAAA,UAG9BE,KAH8B,iBAG9BA,KAH8B;;AAItC,aAAOA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,CAAd,EAAiBG,OAApB,GAA8B,IAA1C;AACD,K;;UAEDK,Y,GAAe,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAMX,MAAM,GAAG,MAAKP,QAAL,EAAf;;AACA,YAAKmB,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEA,MAAM,IAAI;AAApB,OAAd;;AACA,UAAIA,MAAJ,EAAY;;AAEZ,YAAKa,QAAL;AACD,K;;UAEDC,Y,GAAe,iBAA8B;AAAA,UAAZC,KAAY,SAA3BC,aAA2B;;AAC3C,UAAMhB,MAAM,qBAAQ,MAAKL,KAAL,CAAWK,MAAnB,CAAZ;;AACA,UAAMiB,YAAY,GAAG,MAAKZ,gBAAL,CAAsBU,KAAtB,CAArB;;AACA,UAAIE,YAAJ,EAAkBjB,MAAM,CAACe,KAAK,CAACT,IAAP,CAAN,GAAqBW,YAArB,CAAlB,KACK,OAAOjB,MAAM,CAACe,KAAK,CAACT,IAAP,CAAb;;AACL,UAAMV,IAAI,qBAAQ,MAAKD,KAAL,CAAWC,IAAnB,CAAV;;AACAA,MAAAA,IAAI,CAACmB,KAAK,CAACT,IAAP,CAAJ,GAAmBS,KAAK,CAACR,KAAzB;;AAEA,YAAKK,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAJA,IAAF;AAAQI,QAAAA,MAAM,EAANA;AAAR,OAAd;AACD,K;;UAsCDL,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENI,MAAAA,MAAM,EAAE;AAFF,K;;;;;;iCApCKkB,K,EAAO;AAClB,aACE;AAAQ,QAAA,QAAQ,EAAE,KAAKzB,QAAL,EAAlB;AAAmC,QAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,KADH,CADF;AAKD;;;iCAEYZ,I,EAAMY,K,EAAOC,O,EAAS;AAAA,UACzBvB,IADyB,GAChB,KAAKD,KADW,CACzBC,IADyB;AAGjC,aACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAEU,IADR;AAEE,QAAA,KAAK,EAAEV,IAAI,CAACU,IAAD,CAFb;AAGE,QAAA,KAAK,EAAEY,KAHT;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,QAAQ,EAAE,KAAKL,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;gCAEWR,I,EAAMY,K,EAAsB;AAAA,UAAfE,IAAe,uEAAR,MAAQ;AAAA,wBACb,KAAKzB,KADQ;AAAA,UAC9BC,IAD8B,eAC9BA,IAD8B;AAAA,UACxBI,MADwB,eACxBA,MADwB;AAEtC,aACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAEoB,IADR;AAEE,QAAA,IAAI,EAAEd,IAFR;AAGE,QAAA,KAAK,EAAEY,KAHT;AAIE,QAAA,KAAK,EAAEtB,IAAI,CAACU,IAAD,CAJb;AAKE,QAAA,QAAQ,EAAE,KAAKQ,YALjB;AAME,QAAA,KAAK,EAAEd,MAAM,CAACM,IAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EA3EgBlB,S;;AAmFnB,eAAeI,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  validate = () => {\n    const result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false\n    });\n    if (!result.error) return null;\n\n    const errors = {};\n    for (let item of result.error.details) {\n      errors[item.path[0]] = item.message;\n    }\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  state = {\n    data: {},\n    errors: {}\n  };\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}